/*Use this for flexbox tricks: https://css-tricks.com/snippets/css/a-guide-to-flexbox/*/

.container{
	/*Using the DIV class to apply styles on every image*/
	display: flex;
	/*Activating Flexbox*/
	flex-wrap:wrap;
	/*When changing window size, the pictures will "wrap" around windows*/
	justify-content: center;
	/*Centers the pictures*/
}

/*justify-content: aligns content horizontally and then any of below;
flex-start: Items align to the left side of the container.
flex-end: Items align to the right side of the container.
center: Items align at the center of the container.
space-between: Items display with equal spacing between them.
space-around: Items display with equal spacing around them.*/

/*align-items: aligns items vertically then:
flex-start: Items align to the top of the container.
flex-end: Items align to the bottom of the container.
center: Items align at the vertical center of the container.
baseline: Items display at the baseline of the container.
stretch: Items are stretched to fit the container.*/

/*flex-direction: Defines direction of images:
row: Items are placed the same as the text direction.
row-reverse: Items are placed opposite to the text direction.
column: Items are placed top to bottom.
column-reverse: Items are placed bottom to top.
NOTE, FOR REVERSE, THE HORIZONTAL/VERTICAL ORIENTATIONS ARE REVERSED,NOT ALIGN-ITEMS..
NOTE, FOR COLUMN, THE HORIZONTAL IS ALIGN-ITEMS...*/

/*ORDER:
Basically every item needs a class-->
.yellow{order:2;}. The order number increases left to right
CAN USE NEGATIVES AS WELL*/

/*flex-wrap:
nowrap: Every item is fit to a single line.
wrap: Items wrap around to additional lines.
wrap-reverse: Items wrap around to additional lines in reverse.*/

/*flex-flow:
a combination of flex-wrap and flex-direction!
*/

/*align-content:set how multiple lines are spaced apart from each other
flex-start: Lines are packed at the top of the container.
flex-end: Lines are packed at the bottom of the container.
center: Lines are packed at the vertical center of the container.
space-between: Lines display with equal spacing between them.
space-around: Lines display with equal spacing around them.
stretch: Lines are stretched to fit the container.
WHEN THERE IS ONLY ONE LINE, ALIGN-CONTENT HAS NO EFFECT.
*/

body{
	margin:0px;
	/*To remove default margin from browser*/
}

h1{
	font-family: fantasy;
	font-size: 3em;
	border-bottom: 2px solid pink;
	border-right:2px solid pink;
	/*SIZE-PROPERTY-COLOR*/
	width: 400px;
	text-align: center;
	box-shadow: 4px 4px 5px grey;
	/*For 3d shadow effect*/
	margin-top: :0px;
	/*Browser may have own default margin*/
}

img{
	width: 450px;
	height: 300px;
	margin: 10px;
	transition: all 1s;
	/*Want image to "transition" for 1 second, 
	when it undergoes a transformation*/
	/*transition: [property] [duration] [timing-function] [delay];
	https://thoughtbot.com/blog/transitions-and-transforms*/
}

img:hover{
	/*This is the transition*/
	transform:scale(1.1);
	/*can also rotate,translate,skew*/
}
/*RESPONSIVE WEBSITE MEANS, THERES NO CUTOFFS REGARDLESS
OF SCREEN SIZE*/